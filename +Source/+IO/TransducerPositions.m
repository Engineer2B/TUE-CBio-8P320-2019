classdef TransducerPositions
	methods (Static)
		function strct = Read(fileName)
			% Auto-generated by MATLAB on 2018/12/12 18:13:54

			%% Initialize variables.
			filename = fullfile(Settings.DATA_FOLDER,...
				'Transducer', 'Raw', [fileName '.txt']);
			delimiter = '\t';
			startRow = 2;

			%% Format for each line of text:
			%   column2: double (%f)
			%	column3: double (%f)
			%   column4: double (%f)
			% For more information, see the TEXTSCAN documentation.
			formatSpec = '%*s%f%f%f%[^\n\r]';

			%% Open the text file.
			fileID = fopen(filename,'r');

			%% Read columns of data according to the format.
			% This call is based on the structure of the file used to generate 
			% this code. If an error occurs for a different file, try 
			% regenerating the code from the Import Tool.
			dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter,...
				'TextType', 'string', 'HeaderLines' ,startRow-1,...
				'ReturnOnError', false, 'EndOfLine', '\r\n');

			%% Close the text file.
			fclose(fileID);

			%% Post processing for unimportable data.
			% No unimportable data rules were applied during the import, so no 
			% post processing code is included. To generate code which works for
			% unimportable data, select unimportable cells in a file and 
			% regenerate the script.

			%% Create output variable
			coordinates = table(dataArray{1:end-1}, 'VariableNames',...
				{'x','y','z'});
			strct.x = coordinates.x;
			strct.y = coordinates.y;
			strct.z = coordinates.z;
		end
		function Write(data, fileName)
			jsonStr = jsonencode(data);
			fileName = fullfile(Settings.DATA_FOLDER,...
				'Transducer', [fileName '.json']);
			fid = fopen(fileName, 'w');
			
			if fid == -1
				error('Cannot create JSON file');
			end
			fwrite(fid, jsonStr, 'char');
			fclose(fid);
		end
	end
end
